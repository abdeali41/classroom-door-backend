# workflow for deploying cloud functions

name: Cloud functions deploy

# Controls when the action will run. Triggers the workflow on push
# events but only for the master branch
on:
  push:
    branches: [ chore/cd-for-cloud-functions ]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
    # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
    - uses: actions/checkout@v2

    - uses: nelonoel/branch-name@v1.0.1
    # Use branch name for whatever purpose
    - run: echo "::set-env name=BRANCH_NAME::$(echo ${BRANCH_NAME})"

    # Check for branch name 
    - if: $BRANCH_NAME == 'chore/cd-for-cloud-functions'
      run: echo 'Branch name is ' $BRANCH_NAME
    # Runs a single command using the runners shell
    # And of course we need to goto our functions folder to deploy
    - name: Install npm packages
      run: |
        cd functions
        npm install
        touch .env
        echo IS_PROD=true >> .env
        echo STRIPE_DEV_KEY=${{ secrets.STRIPE_DEV_KEY }} >> .env
        echo FIREBASE_DATABASE_DEV_URL=${{ secrets.FIREBASE_DATABASE_DEV_URL }} >> .env
        echo FIREBASE_DEV_CERT_KEY=${{ secrets.FIREBASE_DEV_CERT_KEY }} >> .env
        echo PROJECT_ID_DEV=${{ secrets.PROJECT_ID_DEV }} >> .env
        echo STRIPE_WEBHOOK_SECRET_DEV=${{ secrets.STRIPE_WEBHOOK_SECRET_DEV }} >> .env
        echo CLASSROOMDOOR_WEB_DEV_URL=${{ secrets.CLASSROOMDOOR_WEB_DEV_URL }} >> .env
        echo OPENVIDU_DEV_URL=${{ secrets.OPENVIDU_DEV_URL }} >> .env
        echo OPENVIDU_DEV_SECURITY_TOKEN=${{ secrets.OPENVIDU_DEV_SECURITY_TOKEN }} >> .env
        echo STRIPE_PROD_KEY=${{ secrets.STRIPE_PROD_KEY }} >> .env
        echo FIREBASE_DATABASE_PROD_URL=${{ secrets.FIREBASE_DATABASE_PROD_URL }} >> .env
        echo FIREBASE_PROD_CERT_KEY=${{ secrets.FIREBASE_PROD_CERT_KEY }} >> .env
        echo PROJECT_ID_PROD=${{ secrets.PROJECT_ID_PROD }} >> .env
        echo STRIPE_WEBHOOK_SECRET_PROD=${{ secrets.STRIPE_WEBHOOK_SECRET_PROD }} >> .env
        echo CLASSROOMDOOR_WEB_PROD_URL=${{ secrets.CLASSROOMDOOR_WEB_PROD_URL }} >> .env
        echo OPENVIDU_PROD_URL=${{ secrets.OPENVIDU_PROD_URL }} >> .env
        echo OPENVIDU_PROD_SECURITY_TOKEN=${{ secrets.OPENVIDU_PROD_SECURITY_TOKEN }} >> .env
        echo CLASSROOMDOOR_SUPPORT_EMAIL=${{ secrets.CLASSROOMDOOR_SUPPORT_EMAIL }} >> .env
        cat .env
        ls
    # Deploying the functions to firebase
    - name:  Deploy to Firebase
      uses: w9jds/firebase-action@master
      with:
          args: deploy --only functions:testPayment -P default
      env:
          FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN }}
